package ${package}.modules.${moduleName}.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${package}.common.service.impl.BaseServiceImpl;
import ${package}.common.page.PageData;
import ${package}.common.utils.ConvertUtils;
import ${package}.modules.${moduleName}.dao.${className}Dao;
import ${package}.modules.${moduleName}.dto.${className}DTO;
import ${package}.modules.${moduleName}.dto.${className}ListDTO;
import ${package}.modules.${moduleName}.entity.${className}Entity;
import ${package}.modules.${moduleName}.service.${className}Service;
import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import java.util.Arrays;

/**
 * ${comments}
 *
 * @author ${author} ${email}
 * @since ${version} ${date}
 */
@Service
public class ${className}ServiceImpl extends BaseServiceImpl<${className}Dao,${className}Entity>  implements ${className}Service {
        @Override
        public PageData<${className}ListDTO> page(Map<String, Object> params) {
            IPage page = getPage(params,"sort",false);
            List<${className}ListDTO> dtoList = baseDao.getList(params);
            return getPageData(dtoList,page.getTotal(),${className}ListDTO.class);
        }

        @Override
        public List<${className}ListDTO> list(Map<String, Object> params) {
            List<${className}ListDTO> dtoList = baseDao.getList(params);
            return dtoList;
        }

        @Override
        public List<${className}DTO> comboList(Map<String, Object> params) {
            String id = (String)params.get("id");

            QueryWrapper<${className}Entity> wrapper = new QueryWrapper<>();
            wrapper.eq(StringUtils.isNotBlank(id), "id", id);
            List<${className}Entity> entityList = baseDao.selectList(wrapper);
            return ConvertUtils.sourceToTarget(entityList, ${className}DTO.class);
        }

        @Override
        public ${className}DTO get(Long id) {
            ${className}Entity entity = baseDao.selectById(id);
            return ConvertUtils.sourceToTarget(entity, ${className}DTO.class);
        }

        @Override
        public boolean add(${className}DTO dto) {
            ${className}Entity entity = ConvertUtils.sourceToTarget(dto, ${className}Entity.class);
            return insert(entity);
        }

        @Override
        public boolean update(${className}DTO dto) {
            ${className}Entity entity = ConvertUtils.sourceToTarget(dto, ${className}Entity.class);
            return updateById(entity);
        }

        @Override
        public int delete(Long[] ids) {
            return baseDao.deleteBatchIds(Arrays.asList(ids));
        }
    }